/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1906                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   0.001;
                             // sin(5) = 0.08715574274765817
                             // cos(5) = 0.99619469809174550
L 3;                         // length of cylinder
Rs 0.1090484684133400;       // (R * sin(2.5))
Rc 2.4976205539546443;       // (R * cos(2.5))
rs 0.0545242342066700;       // ((a/2) * sin(2.5))
rc 1.2488102769773222;       // ((a/2) * cos(2.5))
Rs_neg -0.1090484684133400;  // (R * sin(2.5))
rs_neg -0.0545242342066700;  // (r * sin(2.5))

vertices
(
    (0 0 0)            //0
    (0 0 $L)            //1
    ($rs $rc 0)        //2     ((a/2) * sin(2.5); (a/2) * cos(2.5); 0)
    ($rs $rc $L)        //3     ((a/2) * sin(2.5); (a/2) * cos(2.5); 3000)
    ($Rs $Rc 0)        //4     (r * sin(2.5); r * cos(2.5); 0)
    ($Rs $Rc $L)        //5     (r * sin(2.5); r * cos(2.5); 3000)
    ($rs_neg $rc 0)    //6     (-(a/2) * sin(2.5); (a/2) * cos(2.5); 0)
    ($rs_neg $rc $L)    //7     (-(a/2) * sin(2.5); (a/2) * cos(2.5); 3000)
    ($Rs_neg $Rc 0)    //8     (-r * sin(2.5); r * cos(2.5); 0)
    ($Rs_neg $Rc $L)    //9     (-r * sin(2.5); r * cos(2.5); 3000)
);

blocks
(
    hex (0 2 6 0 1 3 7 1) intZone (100 50 20) simpleGrading (2 1 1)    //block0: inner sector
    hex (2 4 8 6 3 5 9 7) outZone (50 50 20) simpleGrading (1 1 1)    //block1: outer sector
);

edges
(
    arc 6 2 (0 1.25 0)
    arc 7 3 (0 1.25 $L)
    arc 8 4 (0 2.5 0)
    arc 9 5 (0 2.5 $L)
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (0 2 6 0)
            (2 4 8 6)
        );
    }

    outlet
    {
        type patch;
        faces
        (
            (1 3 7 1)
            (3 5 9 7)
        );
    }

    wall
    {
        type patch;
        faces
        (
            (4 8 9 5)
        );
    }

    wedge1
    {
        type patch;
        faces
        (
            (0 2 3 1)
            (2 4 5 3)
        );
    }

    wedge2
    {
        type patch;
        faces
        (
            (0 1 7 6)
            (6 7 9 8)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
